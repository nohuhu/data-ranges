const toArray = (...strings) => {
    let result = [];
    
    for (let str of strings) {
        result = [].concat(result, str.split(' ').map(item => parseInt(item)));
    }
    
    return result;
};

const tests = [{
    type: 'integer',
    
    invalid: [
        '1, 2, 5; 7-10; foo', '42..bar', null, undefined, '', {}, NaN
    ],
    
    valid: [
        '-100..-20', '0, 1, 2, 5; 7..10, 15..20', 30, '40..50',
    ],
    
    'new': {
        input: [
            '0, 1, 2, 5; 7..10, 15..20', 30, '40..50', '-42..-45',
        ],
        
        has_list: toArray('-42 -45 0 1 2 5 7 8 9 10 15 16 17 18 19 20 30 40',
                          '41 42 43 44 45 46 47 48 49 50'),
        
        has_in: toArray('-41 -46 3 4 6 11 12 13 14 21 22 23 24 25 26',
                        '27 28 29 31 32 33 34 35 36 37 38 39 -101'),
        
        has_out: toArray('-41 -46 3 4 6 11 12 13 14 21 22 23 24 25 26',
                         '27 28 29 31 32 33 34 35 36 37 38 39 -101'),
    
        valueOf: toArray('-45 -44 -43 -42 0 1 2 5 7 8 9 10 15 16 17 18 19',
                         '20 30 40 41 42 43 44 45 46 47 48 49 50'),
        
        toString: '-45,-44,-43,-42,0,1,2,5,7,8,9,10,15,16,17,18,19,20,30,40,' +
                      '41,42,43,44,45,46,47,48,49,50',
        
        collapsed: '-45..-42,0..2,5,7..10,15..20,30,40..50',
        
        size: 30,
    },
    
    add: {
        input: [ '101;105..107', 110, '115..118', '-46..-42', '19..16', ],
        
        has_list: toArray('-42 -46 0 1 2 5 7 8 9 10 15 16 17 18 19 20 30 40 41',
                          '42 43 44 45 46 47 48 49 50 101 105 106 107',
                          '110 115 116 117 118'),
        
        has_in: toArray('0 1 2 3 4 6 11 12 13 14 21 22 23 24 25 26 -41 -47',
                        '27 28 29 31 32 33 34 35 36 37 38 39 51 52 53 10 15',
                        '54 55 56 57 58 59 60 61 62 63 64 65 66 67 68 20 30',
                        '69 70 71 72 73 74 75 76 77 78 79 80 81 82 83 40 41',
                        '84 85 86 87 88 89 90 91 92 93 94 95 96 97 98 -42 -43',
                        '99 100 102 103 104 108 109 111 112 113 114 119'),
        
        has_out: toArray('3 4 6 11 12 13 14 21 22 23 24 25 26 -41 -47',
                        '27 28 29 31 32 33 34 35 36 37 38 39 51 52 53',
                        '54 55 56 57 58 59 60 61 62 63 64 65 66 67 68',
                        '69 70 71 72 73 74 75 76 77 78 79 80 81 82 83',
                        '84 85 86 87 88 89 90 91 92 93 94 95 96 97 98',
                        '99 100 102 103 104 108 109 111 112 113 114 119'),
        
        valueOf: toArray('-46 -45 -44 -43 -42 0 1 2 5 7 8 9 10 15 16 17 18',
                         '19 20 30 40 41 42 43 44 45 46 47 48 49 50 101 105',
                         '106 107 110 115 116 117 118'),
        
        toString:
            '-46,-45,-44,-43,-42,0,1,2,5,7,8,9,10,15,16,17,18,19,20,30,40,' +
            '41,42,43,44,45,46,47,48,49,50,101,105,106,107,' +
            '110,115,116,117,118',
        
        collapsed: '-46..-42,0..2,5,7..10,15..20,30,40..50,101,105..107,110,115..118',
        
        size: 40,
    },
    
    remove: {
        input: [ '10..100' ],
        
        has_list: toArray('-42 -46 0 1 2 5 7 8 9 101 105 106 107 110 115 116 117 118'),
        
        has_in: toArray('0 1 2 3 4 6 10 11 12 13 14 15 16 17 18 19 20 21 22 -41',
                        '23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38 10 16',
                        '39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54 17 18',
                        '55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70 20 30',
                        '71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86 -42 -43',
                        '87 88 89 90 91 92 93 94 95 96 97 98 99 100 102 -8',
                        '103 104 108 109 111 112 113 114 119 -47'),
        
        has_out: toArray('3 4 6 10 11 12 13 14 15 16 17 18 19 20 21 22 -41',
                         '23 24 25 26 27 28 29 30 31 32 33 34 35 36 37 38',
                         '39 40 41 42 43 44 45 46 47 48 49 50 51 52 53 54',
                         '55 56 57 58 59 60 61 62 63 64 65 66 67 68 69 70',
                         '71 72 73 74 75 76 77 78 79 80 81 82 83 84 85 86',
                         '87 88 89 90 91 92 93 94 95 96 97 98 99 100 102 -8',
                         '103 104 108 109 111 112 113 114 119 -47'),
        
        valueOf: toArray('-46 -45 -44 -43 -42 0 1 2 5 7 8 9 101 105 106 107 110',
                         '115 116 117 118'),
        
        toString: '-46,-45,-44,-43,-42,0,1,2,5,7,8,9,101,105,106,107,110,115,116,117,118',
        
        collapsed: '-46..-42,0..2,5,7..9,101,105..107,110,115..118',
        
        size: 21,
    }
}];

const makeSuite = require('./makeSuite');
const IntegerRange = require('../src/Integer');

describe("Integer ranges", function() {
    tests.forEach(test => makeSuite(test.type, test, IntegerRange));
});
